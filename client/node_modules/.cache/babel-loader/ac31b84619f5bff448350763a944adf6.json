{"ast":null,"code":"var _jsxFileName = \"D:\\\\Universidad\\\\workspace\\\\Git Repositorios\\\\Repositorio TFG\\\\TFG-Luis-Clon\\\\TFG-EscrituraCreativa\\\\client\\\\src\\\\components\\\\pages\\\\teacher\\\\Challenge.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Cookies from 'universal-cookie';\nconst baseUrl = \"http://localhost:3001/teacher/postChallenge\";\nconst cookies = new Cookies(); //cokies guarda la informacion de la sesion del usuario\n\nclass Challenge extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      form: {\n        id: '',\n        nombre: '',\n        desafio: '',\n        colaborativo: ''\n      }\n    };\n\n    this.sendWriting = () => {\n      axios.post(baseUrl, {\n        idChallenge: cookies.get('challengeSelect'),\n        idEscritor: cookies.get('id'),\n        escrito: this.state.form.escrito\n      }).then(response => {\n        this.peticionGet();\n      }).catch(error => {\n        console.log(error.message);\n      });\n    };\n\n    this.handleChange = async e => {\n      await this.setState({\n        form: { ...this.state.form,\n          [e.target.name]: e.target.value\n        }\n      });\n      console.log(this.state.form); //visualizar consola navegador lo que escribimos en el input\n    };\n\n    this.peticionGet = () => {\n      axios.get(baseUrl, {\n        params: {\n          idChallenge: cookies.get('challengeSelect')\n        }\n      }).then(response => {\n        console.log(response.data); //muestra consola navegador\n\n        this.setState({\n          data: response.data\n        });\n      }).catch(error => {\n        console.log(error.message);\n      });\n    };\n\n    this.cerrarSesion = () => {\n      cookies.remove('id', {\n        path: \"/\"\n      });\n      cookies.remove('correo', {\n        path: \"/\"\n      });\n      cookies.remove('nombre', {\n        path: \"/\"\n      });\n      cookies.remove('apellidos', {\n        path: \"/\"\n      });\n      cookies.remove('foto', {\n        path: \"/\"\n      });\n      cookies.remove('activo', {\n        path: \"/\"\n      });\n      cookies.remove('rol', {\n        path: \"/\"\n      });\n      window.location.href = './';\n    };\n  }\n\n  /*Si vuelvo a la pagina de login, comprueba si el usuario ya inicio sesion anteriomente\r\n  si es el caso lo redirige a la home segun su rol*/\n  componentDidMount() {\n    this.peticionGet();\n\n    if (!cookies.get('correo')) {\n      window.location.href = \"./\";\n    }\n  }\n\n  render() {\n    console.log('id: ' + cookies.get('id')); //mensaje por consola navegador\n\n    console.log('correo: ' + cookies.get('correo'));\n    console.log('nombre: ' + cookies.get('nombre'));\n    console.log('apellidos: ' + cookies.get('apellidos'));\n    console.log('foto: ' + cookies.get('foto'));\n    console.log('activo: ' + cookies.get('activo'));\n    console.log('rol: ' + cookies.get('rol'));\n    console.log('grupoSeleccionado: ' + cookies.get('groupSelect'));\n    console.log('desafio Seleccionado: ' + cookies.get('challengeSelect'));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, \" Crear Desafio\"), /*#__PURE__*/React.createElement(\"nav\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.cerrarSesion(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, \"Cerrar Sesi\\xF3n\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"desafio\",\n      rows: \"4\",\n      cols: \"50\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      text: \"enviar\",\n      onClick: () => this.sendWriting(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, \" enviar  \"))));\n  }\n\n}\n\nexport default Challenge;","map":{"version":3,"sources":["D:/Universidad/workspace/Git Repositorios/Repositorio TFG/TFG-Luis-Clon/TFG-EscrituraCreativa/client/src/components/pages/teacher/Challenge.js"],"names":["React","Component","axios","Cookies","baseUrl","cookies","Challenge","state","data","form","id","nombre","desafio","colaborativo","sendWriting","post","idChallenge","get","idEscritor","escrito","then","response","peticionGet","catch","error","console","log","message","handleChange","e","setState","target","name","value","params","cerrarSesion","remove","path","window","location","href","componentDidMount","render"],"mappings":"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","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'universal-cookie';\r\nconst baseUrl = \"http://localhost:3001/teacher/postChallenge\";\r\n\r\nconst cookies = new Cookies();//cokies guarda la informacion de la sesion del usuario\r\n\r\nclass Challenge extends Component {\r\n\r\n    state = {\r\n        data: [],\r\n        form: {\r\n            id: '',\r\n            nombre: '',\r\n            desafio: '',\r\n            colaborativo: ''\r\n        }\r\n\r\n    }\r\n\r\n    /*Se hacen peticiones al servidor para que me devuelva la tabla grupoestudiante*/\r\n    sendWriting = () => {\r\n        axios.post(baseUrl, { idChallenge: cookies.get('challengeSelect'), idEscritor: cookies.get('id'), escrito: this.state.form.escrito }).then(response => {\r\n\r\n            this.peticionGet();\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n    /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n    handleChange = async e => {\r\n        await this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n        console.log(this.state.form);//visualizar consola navegador lo que escribimos en el input\r\n    }\r\n\r\n\r\n    /*Se hacen peticiones al servidor para que me devuelva la tabla grupoestudiante*/\r\n    peticionGet = () => {\r\n        axios.get(baseUrl, { params: { idChallenge: cookies.get('challengeSelect') } }).then(response => {\r\n            console.log(response.data);//muestra consola navegador\r\n            this.setState({ data: response.data });\r\n        }).catch(error => {\r\n            console.log(error.message);\r\n        })\r\n    }\r\n\r\n\r\n    /*Elimina los datos de sesion almacenada por las cookies*/\r\n    cerrarSesion = () => {\r\n        cookies.remove('id', { path: \"/\" });\r\n        cookies.remove('correo', { path: \"/\" });\r\n        cookies.remove('nombre', { path: \"/\" });\r\n        cookies.remove('apellidos', { path: \"/\" });\r\n        cookies.remove('foto', { path: \"/\" });\r\n        cookies.remove('activo', { path: \"/\" });\r\n        cookies.remove('rol', { path: \"/\" });\r\n        window.location.href = './';\r\n    }\r\n    /*Si vuelvo a la pagina de login, comprueba si el usuario ya inicio sesion anteriomente\r\n    si es el caso lo redirige a la home segun su rol*/\r\n    componentDidMount() {\r\n        this.peticionGet();\r\n        if (!cookies.get('correo')) {\r\n            window.location.href = \"./\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log('id: ' + cookies.get('id')); //mensaje por consola navegador\r\n        console.log('correo: ' + cookies.get('correo'));\r\n        console.log('nombre: ' + cookies.get('nombre'));\r\n        console.log('apellidos: ' + cookies.get('apellidos'));\r\n        console.log('foto: ' + cookies.get('foto'));\r\n        console.log('activo: ' + cookies.get('activo'));\r\n        console.log('rol: ' + cookies.get('rol'));\r\n        console.log('grupoSeleccionado: ' + cookies.get('groupSelect'));\r\n        console.log('desafio Seleccionado: ' + cookies.get('challengeSelect'));\r\n        return (\r\n            <>\r\n                <h2> Crear Desafio</h2>\r\n                <nav>\r\n                    <button onClick={() => this.cerrarSesion()}>Cerrar Sesión</button>\r\n                </nav>\r\n                <div>\r\n                    <div>\r\n                        <textarea name=\"desafio\" rows=\"4\" cols=\"50\" onChange={this.handleChange}   ></textarea>\r\n                        <br />\r\n                        <br />\r\n                        <button text='enviar' onClick={() => this.sendWriting()}> enviar  </button>\r\n                        \r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Challenge;"]},"metadata":{},"sourceType":"module"}