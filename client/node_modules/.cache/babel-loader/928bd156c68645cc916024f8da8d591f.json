{"ast":null,"code":"var _jsxFileName = \"D:\\\\Universidad\\\\workspace\\\\Git Repositorios\\\\Repositorio TFG\\\\TFG-Luis-Clon\\\\TFG-EscrituraCreativa\\\\client\\\\src\\\\components\\\\pages\\\\login\\\\Login.js\";\n\n/*\r\n*  Name_file :Login.js\r\n*  Description: Pagina de inicio de sesion, contiene la vista del Login\r\n*    \r\n*/\nimport React, { Component } from 'react';\nimport Axios from 'axios';\nimport Cookies from 'universal-cookie';\nconst baseUrl = \"http://localhost:3001/login/getUser\";\nconst cookies = new Cookies(); //cokies guarda la informacion de la sesion del usuario\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      form: {\n        username: '',\n        password: ''\n      }\n    };\n\n    this.handleChange = async e => {\n      await this.setState({\n        form: { ...this.state.form,\n          [e.target.name]: e.target.value\n        }\n      });\n      console.log(this.state.form); //visualizar consola navegador lo que escribimos en el input\n    };\n\n    this.iniciarSesion = async () => {\n      await Axios.get(baseUrl, {\n        params: {\n          nombre: this.state.form.username,\n          password: this.state.form.password\n        }\n      }) //peticion http al servidor para iniciar sesion\n      .then(response => {\n        console.log(response.data); //muestra el objeto devuelto por el servidor en caso que exista en la consola(navegador)\n\n        return response.data; //respuesta del servidor, me devuelve el objeto en caso que exista\n      }).then(response => {\n        if (response.length > 0) {\n          //si ha encontrado a un usuario, >0\n          var respuesta = response[0]; //donde se guarda el objeto\n\n          if (respuesta.nombre === this.state.form.username && respuesta.password === this.state.form.password) {\n            cookies.set('id', respuesta.id, {\n              path: \"/\"\n            }); //para que sea accesible en cualquier pagina ponemos /\n\n            cookies.set('correo', respuesta.correo, {\n              path: \"/\"\n            });\n            cookies.set('nombre', respuesta.nombre, {\n              path: \"/\"\n            });\n            cookies.set('apellidos', respuesta.apellidos, {\n              path: \"/\"\n            });\n            cookies.set('foto', respuesta.foto, {\n              path: \"/\"\n            });\n            cookies.set('activo', respuesta.activo, {\n              path: \"/\"\n            });\n            cookies.set('rol', respuesta.rol, {\n              path: \"/\"\n            });\n            alert(`Bienvenido ${respuesta.nombre} ${respuesta.apellidos}`);\n\n            switch (respuesta.rol) {\n              case 'A':\n                window.location.href = \"./homeAdmin\";\n                break;\n\n              case 'T':\n                window.location.href = \"./homeTeacher\";\n                break;\n\n              case 'S':\n                window.location.href = \"./homeStudent\";\n                break;\n\n              default:\n                console.log('rol inexistente');\n            }\n          } else {\n            alert('password incorrecto');\n          }\n        } else {\n          alert('El usuario o el password no son correctos');\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n  }\n\n  /*Metodo de ciclo de vida, se ejecuta despues del primer render si vuelvo a la pagina de login, \r\n  comprueba si el usuario ya inicio sesion anteriomente, si es el caso lo redirige a la home segun su rol*/\n  componentDidMount() {\n    if (cookies.get('correo')) {\n      switch (cookies.get('rol')) {\n        case 'A':\n          window.location.href = \"./homeAdmin\";\n          break;\n\n        case 'T':\n          window.location.href = \"./homeTeacher\";\n          break;\n\n        case 'S':\n          window.location.href = \"./homeStudent\";\n          break;\n\n        default:\n          console.log('rol inexistente');\n      }\n    }\n  }\n  /*Dibuja la pagina del Login */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, \"Usuario: \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"Password: \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"password\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      text: \"Log In\",\n      onClick: () => this.iniciarSesion(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, \"Log in  \"));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["D:/Universidad/workspace/Git Repositorios/Repositorio TFG/TFG-Luis-Clon/TFG-EscrituraCreativa/client/src/components/pages/login/Login.js"],"names":["React","Component","Axios","Cookies","baseUrl","cookies","Login","state","form","username","password","handleChange","e","setState","target","name","value","console","log","iniciarSesion","get","params","nombre","then","response","data","length","respuesta","set","id","path","correo","apellidos","foto","activo","rol","alert","window","location","href","catch","error","componentDidMount","render"],"mappings":"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","sourcesContent":["/*\r\n*  Name_file :Login.js\r\n*  Description: Pagina de inicio de sesion, contiene la vista del Login\r\n*    \r\n*/\r\nimport React, { Component } from 'react';\r\nimport Axios from 'axios';\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst baseUrl = \"http://localhost:3001/login/getUser\";\r\nconst cookies = new Cookies();//cokies guarda la informacion de la sesion del usuario\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        form: {\r\n            username: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    /*Lo que escribamos en el input lo guarda en el state async para que lo veamos en tiempo real */\r\n    handleChange = async e => {\r\n        await this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        });\r\n        console.log(this.state.form);//visualizar consola navegador lo que escribimos en el input\r\n    }\r\n\r\n    /*Se hacen peticiones al servidor con un nombre y password, si existe el usuario me devuelve el objeto usuario*/\r\n    iniciarSesion = async () => {\r\n        await Axios.get(baseUrl, { params: { nombre: this.state.form.username, password: this.state.form.password } })//peticion http al servidor para iniciar sesion\r\n            .then(response => {\r\n                console.log(response.data);//muestra el objeto devuelto por el servidor en caso que exista en la consola(navegador)\r\n                return response.data;  //respuesta del servidor, me devuelve el objeto en caso que exista\r\n            })\r\n            .then(response => {\r\n                if (response.length > 0) {//si ha encontrado a un usuario, >0\r\n                    var respuesta = response[0];//donde se guarda el objeto\r\n                    if (respuesta.nombre === this.state.form.username && respuesta.password === this.state.form.password) {\r\n                        cookies.set('id', respuesta.id, { path: \"/\" });//para que sea accesible en cualquier pagina ponemos /\r\n                        cookies.set('correo', respuesta.correo, { path: \"/\" });\r\n                        cookies.set('nombre', respuesta.nombre, { path: \"/\" });\r\n                        cookies.set('apellidos', respuesta.apellidos, { path: \"/\" });\r\n                        cookies.set('foto', respuesta.foto, { path: \"/\" });\r\n                        cookies.set('activo', respuesta.activo, { path: \"/\" });\r\n                        cookies.set('rol', respuesta.rol, { path: \"/\" });\r\n                        alert(`Bienvenido ${respuesta.nombre} ${respuesta.apellidos}`);\r\n                        switch (respuesta.rol) {\r\n                            case 'A':\r\n                                window.location.href = \"./homeAdmin\";\r\n                                break;\r\n                            case 'T':\r\n                                window.location.href = \"./homeTeacher\";\r\n                                break;\r\n                            case 'S':\r\n                                window.location.href = \"./homeStudent\";\r\n                                break;\r\n                            default:\r\n                                console.log('rol inexistente')\r\n                        }\r\n                    }\r\n                    else {\r\n                        alert('password incorrecto');\r\n                    }\r\n                } else {\r\n                    alert('El usuario o el password no son correctos');\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    /*Metodo de ciclo de vida, se ejecuta despues del primer render si vuelvo a la pagina de login, \r\n    comprueba si el usuario ya inicio sesion anteriomente, si es el caso lo redirige a la home segun su rol*/\r\n    componentDidMount() {\r\n        if (cookies.get('correo')) {\r\n            switch (cookies.get('rol')) {\r\n                case 'A':\r\n                    window.location.href = \"./homeAdmin\";\r\n                    break;\r\n                case 'T':\r\n                    window.location.href = \"./homeTeacher\";\r\n                    break;\r\n                case 'S':\r\n                    window.location.href = \"./homeStudent\";\r\n                    break;\r\n                default:\r\n                    console.log('rol inexistente')\r\n            }\r\n        }\r\n    }\r\n\r\n    /*Dibuja la pagina del Login */\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <h1>Login</h1>\r\n                <label>Usuario: </label>\r\n                <br />\r\n                <input type=\"text\" name=\"username\" onChange={this.handleChange} />\r\n                <br />\r\n                <label>Password: </label>\r\n                <br />\r\n                <input type=\"text\" name=\"password\" onChange={this.handleChange} />\r\n                <br />\r\n                <button text='Log In' onClick={() => this.iniciarSesion()}>Log in  </button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}