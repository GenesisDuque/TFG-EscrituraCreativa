{"ast":null,"code":"var _jsxFileName = \"D:\\\\Universidad\\\\Git Repositorios\\\\Repositorio TFG\\\\TFG-Luis-Clon\\\\TFG-EscrituraCreativa\\\\client\\\\src\\\\components\\\\pages\\\\student\\\\Writing.js\";\n\n/*\r\n*  Name_file :GroupStudent.js\r\n*  Description: Pagina del grupo seleccionado por estudiante, contiene la vista del grupo seleccionado por estudiante\r\n*    \r\n*/\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Cookies from 'universal-cookie';\nconst baseUrl = \"http://localhost:3001/links/api/getChallenges\";\nconst cookies = new Cookies(); //cokies guarda la informacion de la sesion del usuario\n\nclass Writing extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: []\n    };\n\n    this.cerrarSesion = () => {\n      cookies.remove('id', {\n        path: \"/\"\n      });\n      cookies.remove('correo', {\n        path: \"/\"\n      });\n      cookies.remove('nombre', {\n        path: \"/\"\n      });\n      cookies.remove('apellidos', {\n        path: \"/\"\n      });\n      cookies.remove('foto', {\n        path: \"/\"\n      });\n      cookies.remove('activo', {\n        path: \"/\"\n      });\n      cookies.remove('rol', {\n        path: \"/\"\n      });\n      window.location.href = './';\n    };\n  }\n\n  /*Si vuelvo a la pagina de login, comprueba si el usuario ya inicio sesion anteriomente\r\n  si es el caso lo redirige a la home segun su rol*/\n  componentDidMount() {\n    this.peticionGet();\n\n    if (!cookies.get('correo')) {\n      window.location.href = \"./\";\n    }\n  }\n\n  render() {\n    console.log('id: ' + cookies.get('id')); //mensaje por consola navegador\n\n    console.log('correo: ' + cookies.get('correo'));\n    console.log('nombre: ' + cookies.get('nombre'));\n    console.log('apellidos: ' + cookies.get('apellidos'));\n    console.log('foto: ' + cookies.get('foto'));\n    console.log('activo: ' + cookies.get('activo'));\n    console.log('rol: ' + cookies.get('rol'));\n    console.log('grupoSeleccionado: ' + cookies.get('groupSelect'));\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \" Crear Writing\"), /*#__PURE__*/React.createElement(\"nav\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.cerrarSesion(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, \"Cerrar Sesi\\xF3n\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, this.state.data.map(challenge => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 37\n        }\n      }, challenge.titulo, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 37\n        }\n      }, \" \", challenge.description));\n    }))));\n  }\n\n}\n\nexport default Writing;","map":{"version":3,"sources":["D:/Universidad/Git Repositorios/Repositorio TFG/TFG-Luis-Clon/TFG-EscrituraCreativa/client/src/components/pages/student/Writing.js"],"names":["React","Component","axios","Cookies","baseUrl","cookies","Writing","state","data","cerrarSesion","remove","path","window","location","href","componentDidMount","peticionGet","get","render","console","log","map","challenge","titulo","description"],"mappings":"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","sourcesContent":["/*\r\n*  Name_file :GroupStudent.js\r\n*  Description: Pagina del grupo seleccionado por estudiante, contiene la vista del grupo seleccionado por estudiante\r\n*    \r\n*/\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'universal-cookie';\r\n\r\n\r\nconst baseUrl = \"http://localhost:3001/links/api/getChallenges\";\r\n\r\nconst cookies = new Cookies();//cokies guarda la informacion de la sesion del usuario\r\n\r\nclass Writing extends Component {\r\n    state = {\r\n        data: [],\r\n\r\n    }\r\n\r\n    /*Elimina los datos de sesion almacenada por las cookies*/\r\n    cerrarSesion = () => \r\n    {\r\n        cookies.remove('id', { path: \"/\" });\r\n        cookies.remove('correo', { path: \"/\" });\r\n        cookies.remove('nombre', { path: \"/\" });\r\n        cookies.remove('apellidos', { path: \"/\" });\r\n        cookies.remove('foto', { path: \"/\" });\r\n        cookies.remove('activo', { path: \"/\" });\r\n        cookies.remove('rol', { path: \"/\" });\r\n        window.location.href = './';\r\n    }\r\n    /*Si vuelvo a la pagina de login, comprueba si el usuario ya inicio sesion anteriomente\r\n    si es el caso lo redirige a la home segun su rol*/\r\n    componentDidMount() \r\n    {\r\n        this.peticionGet();\r\n        if (!cookies.get('correo'))\r\n        {\r\n            window.location.href = \"./\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log('id: ' + cookies.get('id')); //mensaje por consola navegador\r\n        console.log('correo: ' + cookies.get('correo'));\r\n        console.log('nombre: ' + cookies.get('nombre'));\r\n        console.log('apellidos: ' + cookies.get('apellidos'));\r\n        console.log('foto: ' + cookies.get('foto'));\r\n        console.log('activo: ' + cookies.get('activo'));\r\n        console.log('rol: ' + cookies.get('rol'));\r\n        console.log('grupoSeleccionado: ' + cookies.get('groupSelect'));\r\n        return (\r\n            <>\r\n                <h2> Crear Writing</h2>\r\n                <nav>\r\n                    <button onClick={() => this.cerrarSesion()}>Cerrar Sesi√≥n</button>\r\n                </nav>\r\n                <div>\r\n\r\n                    <div>\r\n                        {this.state.data.map(challenge => {\r\n                            return (\r\n                                <div>\r\n                                    <h1>{challenge.titulo} </h1>\r\n                                    <p> {challenge.description}</p>\r\n                                </div>\r\n\r\n                            )\r\n                        })}\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Writing;"]},"metadata":{},"sourceType":"module"}